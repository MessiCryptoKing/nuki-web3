import { capitalize } from "../utils.js";
export function componentReact(name, props) {
    return `      <${capitalize(name)} ${props.length > 0 ? props.map((prop) => `${prop.name}={${prop.name}}`).join(" ") : ""} />`;
}
export function componentImport(name, path) {
    return `import ${capitalize(name)} from '${path}${name}';`;
}
export function functionImport(name, depth, inline) {
    return `import ${inline ? "{ " + name + " }" : name} from '${depth}/functions/${inline ? "functions.js" : name}';`;
}
export function inlineFunctionImport() {
    return `
import { getContract } from '../utils/utils';
import { ethers } from 'ethers';
`;
}
export function inlineComponentImport(functions, inline, useTs) {
    return `
import React, { useState } from 'react';
${inline
        ? `
import {
${functions.map(({ name }) => `${name},`).join("\n")}
} from '../functions/functions.js';
${useTs
            ? `
type State = {
  [key: string]: string
}
`
            : ""}
`
        : functions.map(({ name }) => componentImport(name, ".")).join("\n")}
`;
}
