/*
 * Nuki web3 home-service
 *
 * ...
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"fmt"
	"net/http"

	nuki_apiservice "github.com/messicryptoking/nuki-web3/home-service/pkg/nuki/apiservice"
	nuki_web3 "github.com/messicryptoking/nuki-web3/home-service/pkg/nuki/web3"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
	validatorService nuki_web3.IValidatorService
	nukiApiService   nuki_apiservice.INukiApiService
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService(validatorService nuki_web3.IValidatorService, nukiApiService nuki_apiservice.INukiApiService) DefaultApiServicer {
	return &DefaultApiService{
		validatorService: validatorService,
		nukiApiService:   nukiApiService,
	}
}

// DoorOpenPost - Open the door
func (s *DefaultApiService) DoorOpenPost(ctx context.Context, openDoorRequest OpenDoorRequest) (ImplResponse, error) {
	if s.validatorService.IsAllowedToOpenDoor(fmt.Sprintf("%v", openDoorRequest.Message), "") {
		if s.nukiApiService.OpenDoor() {
			return Response(http.StatusOK, nil), nil
		}
		return Response(http.StatusInternalServerError, nil), nil
	}
	return Response(http.StatusMethodNotAllowed, nil), nil
}
